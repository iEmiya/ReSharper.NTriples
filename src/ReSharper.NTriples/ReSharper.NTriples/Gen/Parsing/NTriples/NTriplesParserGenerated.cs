//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414, 0114
// ReSharper disable RedundantNameQualifier
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
using JetBrains.ReSharper.Psi.ExtensionsAPI;
using ReSharper.NTriples.Impl.Tree;
namespace ReSharper.NTriples.Parsing {
  internal abstract class NTriplesParserGenerated : JetBrains.ReSharper.Psi.Parsing.GeneratedParserBase<JetBrains.ReSharper.Psi.Parsing.ILexer<int>> 
  {
    public NTriplesParserGenerated() {}
    protected ParsingContext myCurrentContext = ParsingContext.UNDEFINED;
    protected enum ParsingContext : short {
      UNDEFINED
    }
    protected class ParsingContextAttribute : System.Attribute {
      private ParsingContext myParsingContext;
      public ParsingContextAttribute (ParsingContext context) {
        myParsingContext = context;
      }
      public ParsingContext ParsingContext {
        get {
          return myParsingContext;
        }
      }
    }
    protected bool IsInFollow (JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType) {
      switch (myCurrentContext) {
        case ParsingContext.UNDEFINED: return false;
        default:
        throw new System.InvalidOperationException("Unknown context");
      }
    }
    protected virtual TreeElement match(JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType) {
      if (myLexer.TokenType != tokenType) {
        var tokenRepr = tokenType.TokenRepresentation;
        if (string.IsNullOrEmpty(tokenRepr))
        throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ReSharper.NTriples.Parsing.ParserMessages.GetExpectedMessage(tokenType.ToString()));
        throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ReSharper.NTriples.Parsing.ParserMessages.GetExpectedMessage(tokenRepr));
      }
      return CreateToken();
    }
    protected void skip(CompositeElement parent) {
      parent.AppendNewChild (CreateToken());
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseNTriplesFile () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType._N_TRIPLES_FILE);
        tempParsingResult = parseSentences();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType != null ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage0());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInNTriplesFile (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInNTriplesFile (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseAnonymousIdentifier () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.ANONYMOUS_IDENTIFIER);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET);
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseIdentifier();
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON);
          result.AppendNewChild (tempParsingResult);
        }
        parseFactsAndSemicolon_(result);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.R_BRACKET);
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseAxisDirective () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.AXIS_DIRECTIVE);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_0 [tokenType]) {
          tempParsingResult = parseUriIdentifiers();
          result.AppendNewChild (tempParsingResult);
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseCutStatement () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.CUT_STATEMENT);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseFormula();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseDataLiteral () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.DATA_LITERAL);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL);
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DATA_SUFFIX
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.LANG) {
          tokenType = myLexer.TokenType;
          if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.LANG) {
            tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.LANG);
            result.AppendNewChild (tempParsingResult);
          } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DATA_SUFFIX) {
            tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.DATA_SUFFIX);
            result.AppendNewChild (tempParsingResult);
            tempParsingResult = parseUriIdentifier();
            result.AppendNewChild (tempParsingResult);
          } else {
            if (result.firstChild == null) result = null;
            throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage1());
          }
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseDirective () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.DIRECTIVE);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD) {
          tempParsingResult = parsePrefixDeclaration();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD) {
          tempParsingResult = parseExtensionDirective();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD) {
          tempParsingResult = parseUseExternalDirective();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD) {
          tempParsingResult = parseAxisDirective();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD) {
          tempParsingResult = parseForAllDirective();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD) {
          tempParsingResult = parseForSomeDirective();
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage2());
        }
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT
            ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE)  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage3());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInDirective (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInDirective (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE)  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseExpression () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.EXPRESSION);
        tempParsingResult = parseIdentifier();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        while(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.EXPRESSION_TAIL_OPERATOR) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.EXPRESSION_TAIL_OPERATOR);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseIdentifier();
          result.AppendNewChild (tempParsingResult);
          tokenType = myLexer.TokenType;
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseExtensionDirective () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.EXTENSION_DIRECTIVE);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseUriIdentifier();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseUriIdentifier();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseFact () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.FACT);
        tempParsingResult = parsePredicate();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseObjects();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !( TokenBitsets.TokenBitset_1 [tokenType])  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage4());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInFact (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInFact (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !( TokenBitsets.TokenBitset_1 [tokenType])  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseFacts () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.FACTS);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseIdentifier();
          result.AppendNewChild (tempParsingResult);
          tokenType = myLexer.TokenType;
          if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON) {
            tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON);
            result.AppendNewChild (tempParsingResult);
            parseFacts_(result);
          }
        } else if (tokenType != null && TokenBitsets.TokenBitset_2 [tokenType]) {
          parseFacts_(result);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage5());
        }
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT
            ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE)  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage6());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInFacts (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInFacts (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE)  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual void parseFactsAndSemicolon_ (CompositeElement result) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      TreeElement tempParsingResult = null; 
      try {
        tempParsingResult = parseFact();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        while(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON);
          result.AppendNewChild (tempParsingResult);
          tokenType = myLexer.TokenType;
          if (tokenType != null && TokenBitsets.TokenBitset_2 [tokenType]) {
            tempParsingResult = parseFact();
            result.AppendNewChild (tempParsingResult);
          }
          tokenType = myLexer.TokenType;
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        throw;
      }
    }
    public virtual void parseFacts_ (CompositeElement result) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      TreeElement tempParsingResult = null; 
      try {
        tempParsingResult = parseFact();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        while(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseFact();
          result.AppendNewChild (tempParsingResult);
          tokenType = myLexer.TokenType;
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        throw;
      }
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseForAllDirective () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.FOR_ALL_DIRECTIVE);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseUriIdentifiers();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseForSomeDirective () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.FOR_SOME_DIRECTIVE);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseUriIdentifiers();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseFormula () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.FORMULA);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_3 [tokenType]) {
          parseMetas(result);
        }
        parseFormula_(result);
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !( TokenBitsets.TokenBitset_4 [tokenType])  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage7());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInFormula (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInFormula (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !( TokenBitsets.TokenBitset_4 [tokenType])  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual void parseFormulaContent (CompositeElement result) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      TreeElement tempParsingResult = null; 
      try {
        tempParsingResult = parseSentences();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        throw;
      }
    }
    public virtual void parseFormula_ (CompositeElement result) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      TreeElement tempParsingResult = null; 
      try {
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE);
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseIdentifier();
          result.AppendNewChild (tempParsingResult);
        }
        parseFormulaContent(result);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE);
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        throw;
      }
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseFromStatement () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.FROM_STATEMENT);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseFormula();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.SELECT_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_5 [tokenType]) {
          tempParsingResult = parseFormula();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES) {
          tempParsingResult = parseList();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER) {
          tempParsingResult = parseVariableIdentifier();
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage8());
        }
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.BIND);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseVariableIdentifier();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseFunctorStatement () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.FUNCTOR_STATEMENT);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseUriIdentifier();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseSmartVar();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.BIND);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseSmartVar();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseFormula();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseHasExpression () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.HAS_EXPRESSION);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseExpression();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseIdentifier () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.IDENTIFIER);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_0 [tokenType]) {
          tempParsingResult = parseUriIdentifier();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET) {
          tempParsingResult = parseAnonymousIdentifier();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL) {
          tempParsingResult = parseLiteral();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD) {
          tempParsingResult = parseLiteral_keywords();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER) {
          tempParsingResult = parseVariableIdentifier();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES) {
          tempParsingResult = parseList();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType != null && TokenBitsets.TokenBitset_5 [tokenType]) {
          tempParsingResult = parseFormula();
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage9());
        }
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !( TokenBitsets.TokenBitset_6 [tokenType])  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage10());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInIdentifier (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInIdentifier (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !( TokenBitsets.TokenBitset_6 [tokenType])  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseIfStatement () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.IF_STATEMENT);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD);
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage11());
        }
        tempParsingResult = parseFormula();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.THEN_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseFormula();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.ELSE_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.ELSE_KEYWORD);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseFormula();
          result.AppendNewChild (tempParsingResult);
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseIsOfExpression () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.IS_OF_EXPRESSION);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseExpression();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.OF_KEYWORD);
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseKeywordStatement () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.KEYWORD_STATEMENT);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD) {
          tempParsingResult = parseIfStatement();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD) {
          tempParsingResult = parseNotStatement();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD) {
          tempParsingResult = parseFromStatement();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD) {
          tempParsingResult = parseOrStatement();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD) {
          tempParsingResult = parseFunctorStatement();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD) {
          tempParsingResult = parseCutStatement();
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage12());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseList () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.LIST);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES);
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        while(tokenType != null && TokenBitsets.TokenBitset_7 [tokenType]) {
          tokenType = myLexer.TokenType;
          if (tokenType != null && TokenBitsets.TokenBitset_8 [tokenType]) {
            tempParsingResult = parseExpression();
            result.AppendNewChild (tempParsingResult);
          } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.ELLIPSIS) {
            tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.ELLIPSIS);
            result.AppendNewChild (tempParsingResult);
          } else {
            if (result.firstChild == null) result = null;
            throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage13());
          }
          tokenType = myLexer.TokenType;
        }
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.R_PARENTHESES);
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !( TokenBitsets.TokenBitset_6 [tokenType])  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage14());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInList (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInList (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !( TokenBitsets.TokenBitset_6 [tokenType])  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseLiteral () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      TreeElement tempParsingResult = null; 
      try {
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL) {
          tempParsingResult = parseDataLiteral();
        } else {
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage15());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult == null) {
          e.ParsingResult = tempParsingResult;
        }
        throw;
      }
      return tempParsingResult;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseLiteral_keywords () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      TreeElement tempParsingResult = null; 
      try {
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD);
        } else {
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage16());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult == null) {
          e.ParsingResult = tempParsingResult;
        }
        throw;
      }
      return tempParsingResult;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseLocalName () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.LOCAL_NAME);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER);
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseMeta () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.META);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseVariables();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseVariables();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseUriIdentifiers();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseAnonymousIdentifier();
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage17());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual void parseMetas (CompositeElement result) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      TreeElement tempParsingResult = null; 
      try {
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_3 [tokenType]) {
          do {
            tempParsingResult = parseMeta();
            result.AppendNewChild (tempParsingResult);
            tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.DOT);
            result.AppendNewChild (tempParsingResult);
            tokenType = myLexer.TokenType;
          }
          while (tokenType != null && TokenBitsets.TokenBitset_3 [tokenType]);
        } else {
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage18());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        throw;
      }
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseNotStatement () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.NOT_STATEMENT);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parseFormula();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseObjects () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.OBJECTS);
        tempParsingResult = parseExpression();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        while(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.COMMA) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.COMMA);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseExpression();
          result.AppendNewChild (tempParsingResult);
          tokenType = myLexer.TokenType;
        }
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !( TokenBitsets.TokenBitset_1 [tokenType])  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage19());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInObjects (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInObjects (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !( TokenBitsets.TokenBitset_1 [tokenType])  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseOrStatement () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.OR_STATEMENT);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD);
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage20());
        }
        tempParsingResult = parseFormula();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        while(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseFormula();
          result.AppendNewChild (tempParsingResult);
          tokenType = myLexer.TokenType;
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parsePredicate () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.PREDICATE);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_8 [tokenType]) {
          tempParsingResult = parseExpression();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD) {
          tempParsingResult = parseHasExpression();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD) {
          tempParsingResult = parseIsOfExpression();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.BIND) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.BIND);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.CONNECT) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.CONNECT);
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage21());
        }
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !( TokenBitsets.TokenBitset_8 [tokenType])  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage22());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInPredicate (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInPredicate (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !( TokenBitsets.TokenBitset_8 [tokenType])  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parsePrefix () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.PREFIX);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR) {
          tokenType = myLexer.TokenType;
          if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER) {
            tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER);
            result.AppendNewChild (tempParsingResult);
          }
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR);
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage23());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parsePrefixDeclaration () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.PREFIX_DECLARATION);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD);
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage24());
        }
        tempParsingResult = parsePrefixName();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = parsePrefixUri();
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_END);
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parsePrefixName () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.PREFIX_NAME);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER);
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR) {
          tokenType = myLexer.TokenType;
          if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER) {
            tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER);
            result.AppendNewChild (tempParsingResult);
          }
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR);
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage25());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parsePrefixUri () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.PREFIX_URI);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_STRING);
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseSentence () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.SENTENCE);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_9 [tokenType]) {
          tempParsingResult = parseStatement();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType != null && TokenBitsets.TokenBitset_10 [tokenType]) {
          tempParsingResult = parseDirective();
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage26());
        }
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT
            ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE)  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage27());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInSentence (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInSentence (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE)  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseSentences () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.SENTENCES);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_11 [tokenType]) {
          tempParsingResult = parseSentence();
          result.AppendNewChild (tempParsingResult);
        }
        tokenType = myLexer.TokenType;
        while(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.DOT);
          result.AppendNewChild (tempParsingResult);
          tokenType = myLexer.TokenType;
          if (tokenType != null && TokenBitsets.TokenBitset_11 [tokenType]) {
            tempParsingResult = parseSentence();
            result.AppendNewChild (tempParsingResult);
          }
          tokenType = myLexer.TokenType;
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseSmartVar () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.SMART_VAR);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES) {
          tempParsingResult = parseList();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER) {
          tempParsingResult = parseVariableIdentifier();
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage28());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseStatement () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.STATEMENT);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_8 [tokenType]) {
          tempParsingResult = parseSubject();
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseFacts();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType != null && TokenBitsets.TokenBitset_12 [tokenType]) {
          tempParsingResult = parseKeywordStatement();
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage29());
        }
        tokenType = myLexer.TokenType;
        if (tokenType != null  && !(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT
            ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE)  ) {
          throw new JetBrains.ReSharper.Psi.Parsing.FollowsFailure (ErrorMessages.GetErrorMessage30());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        if (result != null) {
          handleErrorInStatement (result, e);
        } else {
          throw;
        }
      }
      return result;
    }
    protected virtual CompositeElement handleErrorInStatement (CompositeElement result, JetBrains.ReSharper.Psi.Parsing.SyntaxError error) {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement errorElement;
      if (result is JetBrains.ReSharper.Psi.Tree.IErrorElement) {
        errorElement = result;
      }
      else {
        errorElement = TreeElementFactory.CreateErrorElement(error.Message);
        result.AppendNewChild(errorElement);
      }
      tokenType = myLexer.TokenType;
      while(tokenType != null  && !(tokenType == ReSharper.NTriples.Impl.Tree.TokenType.DOT
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE)  && !IsInFollow(tokenType)  ) {
        skip(errorElement);
        tokenType = myLexer.TokenType;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseSubject () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.SUBJECT);
        tempParsingResult = parseExpression();
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseUriIdentifier () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.URI_IDENTIFIER);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR
          ||tokenType == ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER) {
          tempParsingResult = parsePrefix();
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseLocalName();
          result.AppendNewChild (tempParsingResult);
        } else if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN);
          result.AppendNewChild (tempParsingResult);
          tokenType = myLexer.TokenType;
          if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.URI_STRING) {
            tempParsingResult = parseUriString();
            result.AppendNewChild (tempParsingResult);
          }
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_END);
          result.AppendNewChild (tempParsingResult);
        } else {
          if (result.firstChild == null) result = null;
          throw new JetBrains.ReSharper.Psi.Parsing.UnexpectedToken (ErrorMessages.GetErrorMessage31());
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseUriIdentifiers () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.URI_IDENTIFIERS);
        tempParsingResult = parseUriIdentifier();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.COMMA) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.COMMA);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseUriIdentifiers();
          result.AppendNewChild (tempParsingResult);
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseUriString () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.URI_STRING);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_STRING);
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseUseExternalDirective () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.USE_EXTERNAL_DIRECTIVE);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_STRING);
        result.AppendNewChild (tempParsingResult);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.URI_END);
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType != null && TokenBitsets.TokenBitset_0 [tokenType]) {
          tempParsingResult = parseUriIdentifiers();
          result.AppendNewChild (tempParsingResult);
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseVariableIdentifier () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.VARIABLE_IDENTIFIER);
        tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER);
        result.AppendNewChild (tempParsingResult);
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
    public virtual JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.TreeElement parseVariables () {
      JetBrains.ReSharper.Psi.Parsing.TokenNodeType tokenType;
      CompositeElement result = null;
      TreeElement tempParsingResult = null; 
      try {
        result = TreeElementFactory.CreateCompositeElement (ReSharper.NTriples.Impl.Tree.ElementType.VARIABLES);
        tempParsingResult = parseVariableIdentifier();
        result.AppendNewChild (tempParsingResult);
        tokenType = myLexer.TokenType;
        if (tokenType == ReSharper.NTriples.Impl.Tree.TokenType.COMMA) {
          tempParsingResult = match(ReSharper.NTriples.Impl.Tree.TokenType.COMMA);
          result.AppendNewChild (tempParsingResult);
          tempParsingResult = parseVariables();
          result.AppendNewChild (tempParsingResult);
        }
      } catch (JetBrains.ReSharper.Psi.Parsing.SyntaxError e) {
        if (e.ParsingResult != null && result != null) {
          result.AppendNewChild (e.ParsingResult);
        }
        if (result != null) {
          e.ParsingResult = result;
        }
        throw;
      }
      return result;
    }
  }
}
