//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414
// ReSharper disable RedundantNameQualifier
using System.Collections;
namespace ReSharper.NTriples.Parsing {
  public static class TokenBitsets {
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_0 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_1 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.DOT,
        ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.R_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_2 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.BIND,
        ReSharper.NTriples.Impl.Tree.TokenType.CONNECT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_3 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_4 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.BIND,
        ReSharper.NTriples.Impl.Tree.TokenType.COMMA,
        ReSharper.NTriples.Impl.Tree.TokenType.CONNECT,
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.ELLIPSIS,
        ReSharper.NTriples.Impl.Tree.TokenType.ELSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.EXPRESSION_TAIL_OPERATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.R_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.R_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS,
        ReSharper.NTriples.Impl.Tree.TokenType.SELECT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.THEN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_5 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_6 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.BIND,
        ReSharper.NTriples.Impl.Tree.TokenType.COMMA,
        ReSharper.NTriples.Impl.Tree.TokenType.CONNECT,
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.ELLIPSIS,
        ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.EXPRESSION_TAIL_OPERATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.R_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.R_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.R_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS,
        ReSharper.NTriples.Impl.Tree.TokenType.SEMICOLON,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_7 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.ELLIPSIS,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_8 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_9 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_10 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_11 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet TokenBitset_12 = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_NTriplesFile = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_sentences = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_sentence = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_statement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_directive = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_prefixDeclaration = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_extensionDirective = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_useExternalDirective = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_axisDirective = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_forAllDirective = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_forSomeDirective = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_prefixUri = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.URI_STRING,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_prefixName = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_uriIdentifier = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_uriIdentifiers = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_facts = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.BIND,
        ReSharper.NTriples.Impl.Tree.TokenType.CONNECT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NAME_KEY,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_subject = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_keywordStatement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_ifStatement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_notStatement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_fromStatement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_orStatement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_functorStatement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_cutStatement = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_formula = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_list = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_variableIdentifier = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_smartVar = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_expression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_identifier = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_facts_ = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.BIND,
        ReSharper.NTriples.Impl.Tree.TokenType.CONNECT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_fact = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.BIND,
        ReSharper.NTriples.Impl.Tree.TokenType.CONNECT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_predicate = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.BIND,
        ReSharper.NTriples.Impl.Tree.TokenType.CONNECT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_objects = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_hasExpression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_isOfExpression = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_anonymousIdentifier = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_literal = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_literal_keywords = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_uriString = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.URI_STRING,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_prefix = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_localName = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_metas = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_formula_ = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_formulaContent = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DEFAULT_AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.DOT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EXTENSION_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_ALL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FOR_SOME_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FROM_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.FUNCTOR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IF_NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.ONCE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OR_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STD_PREFIX_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.TRY_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.USING_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_meta = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_variables = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_dataLiteral = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
      }
    );
    public static JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet FIRST_factsAndSemicolon_ = new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeTypeSet(
      new JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.NodeType[] {
        ReSharper.NTriples.Impl.Tree.TokenType.AXIS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.A_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.BIND,
        ReSharper.NTriples.Impl.Tree.TokenType.CONNECT,
        ReSharper.NTriples.Impl.Tree.TokenType.DOUBLE_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.FALSE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.HAS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.IMPLIES,
        ReSharper.NTriples.Impl.Tree.TokenType.INTEGER_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.IN_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.IS_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACE,
        ReSharper.NTriples.Impl.Tree.TokenType.L_BRACKET,
        ReSharper.NTriples.Impl.Tree.TokenType.L_PARENTHESES,
        ReSharper.NTriples.Impl.Tree.TokenType.META_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.NAMESPACE_SEPARATOR,
        ReSharper.NTriples.Impl.Tree.TokenType.NOT_EQUAL_TO,
        ReSharper.NTriples.Impl.Tree.TokenType.NULL_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.OUT_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.PREFIX_IDENTIFIER,
        ReSharper.NTriples.Impl.Tree.TokenType.SAME_AS,
        ReSharper.NTriples.Impl.Tree.TokenType.STRING_LITERAL,
        ReSharper.NTriples.Impl.Tree.TokenType.TRUE_KEYWORD,
        ReSharper.NTriples.Impl.Tree.TokenType.URI_BEGIN,
        ReSharper.NTriples.Impl.Tree.TokenType.VARIABLE_IDENTIFIER,
      }
    );
  }
}
